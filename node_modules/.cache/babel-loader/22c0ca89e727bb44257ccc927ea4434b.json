{"ast":null,"code":"var _jsxFileName = \"/home/pri/Desktop/react/FoodOrder/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = userData => {\n    fetch('https://react-prac-34cc1-default-rtdb.firebaseio.com/oders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n  };\n\n  const cartitems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClose,\n      className: classes['button--alt'],\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 26\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: [cartitems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: props.onClose,\n      onConfirm: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 24\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Cart, \"vwEl2SnchkpaRwLFxgvXUQbcC4U=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/pri/Desktop/react/FoodOrder/src/components/Cart/Cart.js"],"names":["React","useContext","useState","CartContext","Modal","classes","CartItem","Checkout","Cart","props","cartCtx","isCheckout","setIsCheckout","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","cartitems","map","name","price","bind","modalActions","actions","onClose","button","total"],"mappings":"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","sourcesContent":["import React,{useContext, useState} from \"react\"\nimport CartContext from \"../../store/cart-context\"\nimport Modal from \"../UI/Modal\"\nimport classes from \"./Cart.module.css\"\nimport CartItem from \"./CartItem\"\nimport Checkout from \"./Checkout\"\n\nconst Cart = (props) => {\n    const cartCtx = useContext(CartContext);\n\n    const [isCheckout,setIsCheckout] = useState(false);\n\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n    const hasItems = cartCtx.items.length > 0;\n\n    const cartItemRemoveHandler = (id) => {\n        cartCtx.removeItem(id);\n    }\n\n    const cartItemAddHandler = (item) => {\n        cartCtx.addItem({...item,amount:1});\n    }\n\n    const orderHandler = () => {\n        setIsCheckout(true);\n    }\n\n    const submitOrderHandler = (userData) => {\n        fetch('https://react-prac-34cc1-default-rtdb.firebaseio.com/oders.json',{\n            method : 'POST',\n            body : JSON.stringify({\n                user : userData,\n                orderedItems : cartCtx.items\n            })\n        })\n    }\n\n    const cartitems = <ul className={classes['cart-items']}>\n        {cartCtx.items.map(\n            (item) => <CartItem \n                key={item.id} \n                name={item.name} \n                amount={item.amount} \n                price={item.price}\n                onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                onAdd={cartItemAddHandler.bind(null, item)} /> \n        )}\n    </ul>\n\n    const modalActions = <div className={classes.actions}>\n        <button onClick={props.onClose} className={classes['button--alt']}>Close</button>\n        {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\n    </div>\n\n    return(<Modal onClose={props.onClose}>\n        {cartitems}\n        <div className={classes.total}>\n            <span>Total Amount</span>\n            <span>{totalAmount}</span>\n        </div>\n        {isCheckout && <Checkout onCancel={props.onClose} onConfirm={submitOrderHandler} />}\n        {!isCheckout && modalActions}\n    </Modal>)\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}