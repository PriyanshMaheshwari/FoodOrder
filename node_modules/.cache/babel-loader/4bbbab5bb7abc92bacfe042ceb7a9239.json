{"ast":null,"code":"var _jsxFileName = \"/home/pri/Desktop/react/FoodOrder/src/components/Cart/Cart.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext, useState } from \"react\";\nimport CartContext from \"../../store/cart-context\";\nimport Modal from \"../UI/Modal\";\nimport classes from \"./Cart.module.css\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const cartCtx = useContext(CartContext);\n  const [isCheckout, setIsCheckout] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [didSubmit, setDidSubmit] = useState(false);\n  const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const orderHandler = () => {\n    setIsCheckout(true);\n  };\n\n  const submitOrderHandler = async userData => {\n    setIsSubmitting(true);\n    await fetch('https://react-prac-34cc1-default-rtdb.firebaseio.com/oders.json', {\n      method: 'POST',\n      body: JSON.stringify({\n        user: userData,\n        orderedItems: cartCtx.items\n      })\n    });\n    setIsSubmitting(false);\n    setDidSubmit(true);\n    cartCtx.clearCart();\n  };\n\n  const cartitems = /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: classes['cart-items'],\n    children: cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      name: item.name,\n      amount: item.amount,\n      price: item.price,\n      onRemove: cartItemRemoveHandler.bind(null, item.id),\n      onAdd: cartItemAddHandler.bind(null, item)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 23\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 23\n  }, this);\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.onClose,\n      className: classes['button--alt'],\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: classes.button,\n      onClick: orderHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 26\n  }, this);\n\n  let modalItem = /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [cartitems, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onCancel: props.onClose,\n      onConfirm: submitOrderHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 24\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 21\n  }, this);\n\n  if (isSubmitting) {\n    modalItem = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Submitting...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this);\n  }\n\n  if (didSubmit) {\n    modalItem = /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Order is placed!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: props.onClose,\n        className: classes.button,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: props.onClose,\n    children: modalItem\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Cart, \"VRZGi9oeGO4NQwukCCjrBh0k19M=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/home/pri/Desktop/react/FoodOrder/src/components/Cart/Cart.js"],"names":["React","Fragment","useContext","useState","CartContext","Modal","classes","CartItem","Checkout","Cart","props","cartCtx","isCheckout","setIsCheckout","isSubmitting","setIsSubmitting","didSubmit","setDidSubmit","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","orderHandler","submitOrderHandler","userData","fetch","method","body","JSON","stringify","user","orderedItems","clearCart","cartitems","map","name","price","bind","modalActions","actions","onClose","button","modalItem","total"],"mappings":"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","sourcesContent":["import React,{Fragment, useContext, useState} from \"react\"\nimport CartContext from \"../../store/cart-context\"\nimport Modal from \"../UI/Modal\"\nimport classes from \"./Cart.module.css\"\nimport CartItem from \"./CartItem\"\nimport Checkout from \"./Checkout\"\n\nconst Cart = (props) => {\n    const cartCtx = useContext(CartContext);\n\n    const [isCheckout,setIsCheckout] = useState(false);\n    const [isSubmitting,setIsSubmitting] = useState(false);\n    const [didSubmit,setDidSubmit] = useState(false);\n\n    const totalAmount = `$${cartCtx.totalAmount.toFixed(2)}`;\n    const hasItems = cartCtx.items.length > 0;\n\n    const cartItemRemoveHandler = (id) => {\n        cartCtx.removeItem(id);\n    }\n\n    const cartItemAddHandler = (item) => {\n        cartCtx.addItem({...item,amount:1});\n    }\n\n    const orderHandler = () => {\n        setIsCheckout(true);\n    }\n\n    const submitOrderHandler = async (userData) => {\n\n        setIsSubmitting(true);\n        await fetch('https://react-prac-34cc1-default-rtdb.firebaseio.com/oders.json',{\n            method : 'POST',\n            body : JSON.stringify({\n                user : userData,\n                orderedItems : cartCtx.items\n            })\n        })\n\n        setIsSubmitting(false);\n        setDidSubmit(true);\n        cartCtx.clearCart();\n    }\n\n    const cartitems = <ul className={classes['cart-items']}>\n        {cartCtx.items.map(\n            (item) => <CartItem \n                key={item.id} \n                name={item.name} \n                amount={item.amount} \n                price={item.price}\n                onRemove={cartItemRemoveHandler.bind(null, item.id)}\n                onAdd={cartItemAddHandler.bind(null, item)} /> \n        )}\n    </ul>\n\n    const modalActions = <div className={classes.actions}>\n        <button onClick={props.onClose} className={classes['button--alt']}>Close</button>\n        {hasItems && <button className={classes.button} onClick={orderHandler}>Order</button>}\n    </div>\n\n    let modalItem = <Fragment>\n        {cartitems}\n        <div className={classes.total}>\n            <span>Total Amount</span>\n            <span>{totalAmount}</span>\n        </div>\n        {isCheckout && <Checkout onCancel={props.onClose} onConfirm={submitOrderHandler} />}\n        {!isCheckout && modalActions}\n    </Fragment>\n\n    if(isSubmitting){\n        modalItem = <p>Submitting...</p>\n    }\n\n    if(didSubmit){\n        modalItem = <Fragment>\n            <p>Order is placed!!</p>\n            <button onClick={props.onClose} className={classes.button}>Close</button>\n        </Fragment>\n    }\n\n    return(<Modal onClose={props.onClose}>\n        {modalItem}\n    </Modal>)\n}\n\nexport default Cart;"]},"metadata":{},"sourceType":"module"}